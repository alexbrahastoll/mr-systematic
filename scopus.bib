Scopus
EXPORT DATE: 8 May 2019

@ARTICLE{Brabra201965,
author={Brabra, H. and Mtibaa, A. and Petrillo, F. and Merle, P. and Sliman, L. and Moha, N. and Gaaloul, W. and Guéhéneuc, Y.-G. and Benatallah, B. and Gargouri, F.},
title={On semantic detection of cloud API (anti)patterns},
journal={Information and Software Technology},
year={2019},
volume={107},
pages={65-82},
doi={10.1016/j.infsof.2018.10.012},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056226726&doi=10.1016%2fj.infsof.2018.10.012&partnerID=40&md5=0d2bb0a7b7fb5cec913498cf9b1f6c74},
affiliation={Faculty of Economics and Management of Sfax, Miracl Laboratory, University of Sfax, Tunisia; Computer Science Department, SAMOVAR, Telecom SudParis, CNRS, Paris-Saclay University, Evry, France; École Nationale d'Electronique et des Télécommunications de Sfax, Miracl Laboratory, University of Sfax, Tunisia; École Polytechnique Montréal, Montreal, Canada; Inria Lille - Nord Europe, Villeneuve d'Ascq, France; French Engineering School Efrei, Paris, France; Département d'Informatique, Université du Québec, Montréal, Canada; DGIGL, École Polytechnique á Montréal, Montréal, Canada; University of New South Wales, Sydney, Australia; Higher Institue of Computer Science and Multimedia of Sfax, Miracl Laboratory, University of Sfax, Tunisia},
abstract={Context: Open standards are urgently needed for enabling software interoperability in Cloud Computing. Open Cloud Computing Interface (OCCI) provides a set of best design principles to create interoperable REST management APIs. Although OCCI is the only standard addressing the management of any kind of cloud resources, it does not support a range of best principles related to REST design. This often worsens REST API quality by decreasing their understandability and reusability. Objective: We aim at assisting cloud developers to enhance their REST management APIs by providing a compliance evaluation of OCCI and REST best principles and a recommendation support to comply with these principles. Method: First, we leverage patterns and anti-patterns to drive respectively the good and poor practices of OCCI and REST best principles. Then, we propose a semantic-based approach for defining and detecting REST and OCCI (anti)patterns and providing a set of correction recommendations to comply with both REST and OCCI best principles. We validated this approach by applying it on cloud REST APIs and evaluating its accuracy, usefulness and extensibility. Results: We found that our approach accurately detects OCCI and REST(anti)patterns and provides useful recommendations. According to the compliance results, we reveal that there is no widespread adoption of OCCI principles in existing APIs. In contrast, these APIs have reached an acceptable level of maturity regarding REST principles. Conclusion: Our approach provides an effective and extensible technique for defining and detecting OCCI and REST (anti)patterns in Cloud REST APIs. Cloud software developers can benefit from our approach and defined principles to accurately evaluate their APIs from OCCI and REST perspectives. This contributes in designing interoperable, understandable, and reusable Cloud management APIs. Thank to the compliance analysis and the recommendation support, we also contribute to improving these APIs, which make them more straightforward. © 2018 Elsevier B.V.},
publisher={Elsevier B.V.},
issn={09505849},
coden={ISOTE},
language={English},
document_type={Article},
source={Scopus},
mrs_inclusion_criteria={all}
}

@CONFERENCE{Porter2019,
author={Porter, R. and Sylvester-Bradley, G.},
title={Scalability and Performance of the AMWA IS-04 and IS-05 NMOS Specifications for Networked Media},
journal={SMPTE 2018},
year={2019},
doi={10.5594/M001842},
art_number={8610041},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85063107213&doi=10.5594%2fM001842&partnerID=40&md5=0e8e8572da90f33179178910f54ba8bb},
affiliation={Sony Europe Limited, United Kingdom},
abstract={The use of IP networks for professional AV media is becoming prevalent within the broadcast industry with standards such as SMPTE ST 2110 now available for streaming uncompressed video, audio and ancillary data. To allow full interoperability between different manufacturers' equipment, common methods for discovery, registration and connection management of media devices are essential. The Advanced Media Workflow Association (AMWA) has been developing the Networked Media Open Specifications (NMOS) for this purpose, leading to the publication of two interface specifications: IS-04 for discovery/registration of NMOS Nodes and IS-05 for management of connections between Nodes. These use RESTful APIs to communicate between applications and devices and are gaining widespread adoption. - However, a key requirement within the industry is that these APIs scale successfully in the very large installations typical of real world deployments. To help address this, Sony has been leading an AMWA NMOS Scalability study to test these protocols for installations comprising thousands of media devices. - The study includes: confirming that operations such as the registration of thousands of Nodes can occur within an acceptable timeframe; testing recovery of the Registry after a failure; testing behaviour with multiple clustered Registries; testing different methods of Registry discovery; testing connection management at scale; and confirming behaviour for architectures with redundant network interfaces. The test suite has been shared with other AMWA members and tests have been repeated and confirmed with different Registry and Node implementations. - This paper describes our test methodology, provides several results, discusses their implications, identifies best practices for deployment and suggests whether further API enhancements may be beneficial. © 2018 Society of Motion Picture and Television Engineers, Inc.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781614829607},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec},
mrs_exclusion_criteria={irrelevant_purpose, not_cs_journal}
}

@ARTICLE{Gamez-Diaz2019435,
author={Gamez-Diaz, A. and Fernandez, P. and Pautasso, C. and Ivanchikj, A. and Ruiz-Cortes, A.},
title={ELECTRA: Induced usage limitations calculation in RESTful APIs},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2019},
volume={11434 LNCS},
pages={435-438},
doi={10.1007/978-3-030-17642-6_39},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85064875506&doi=10.1007%2f978-3-030-17642-6_39&partnerID=40&md5=728bb24b6f6f9c00dd7dda7f81aff1e8},
affiliation={Universidad de Sevilla, Seville, Spain; Software Institute, Faculty of Informatics, USI Lugano, Lugano, Switzerland},
abstract={As software architecture design is evolving to microservice paradigms, RESTful APIs become the building blocks of applications. In such a scenario, a growing market of APIs is proliferating and developers face the challenges to take advantage of this reality. For example, third-party APIs typically define different usage limitations depending on the purchased Service Level Agreement (SLA) and, consequently, performing a manual analysis of external APIs and their impact in a microservice architecture is a complex and tedious task. In this demonstration paper, we present ELeCTRA, a tool to automate the analysis of induced usage limitations in an API, derived from its usage of external APIs. This tool takes the structural, conversational and SLA specifications of the API, generates a visual dependency graph and translates the problem into a constraint satisfaction optimization problem (CSOP) to obtain the optimal usage limitations. © Springer Nature Switzerland AG 2019.},
editor={Mrissa M., Benslimane D., Zhang L., Zou Y., Yu Q., Liu X., Zhang W., Wang Z., Ghose A., Bucchiarone A.},
publisher={Springer Verlag},
issn={03029743},
isbn={9783030176419},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@ARTICLE{Pirelli201927,
author={Pirelli, B. and Nessler, N. and Wegmann, A.},
title={Co-design of business and it services - a tool-supported approach},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2019},
volume={11434 LNCS},
pages={27-40},
doi={10.1007/978-3-030-17642-6_3},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85064862062&doi=10.1007%2f978-3-030-17642-6_3&partnerID=40&md5=2157ef23ebccc3e1159d4d2a52738d84},
affiliation={School of Computer and Communication Sciences, Ecole Polytechnique Fédérale de Lausanne (EPFL), Lausanne, 1015, Switzerland},
abstract={Service modeling is an important step in designing service-oriented systems. There are multiple levels of design because service science includes both the business rationale and the IT implementation of the services. As business and IT perspectives differ, the modeling techniques are different, and often the respective modeling languages are disconnected or ad-hoc. We propose a new service-modeling approach for connecting the business modeling and the web service modeling by presenting these two perspectives in a single model. We present a multi-stage modeling process for capturing different perspectives and creating models iteratively by working with levels of abstraction from higher to lower. The model is then used as an input in order to generate a REST API specification in the OpenAPI format to feed the next stages of the service life-cycle. © Springer Nature Switzerland AG 2019.},
editor={Mrissa M., Benslimane D., Zhang L., Zou Y., Yu Q., Liu X., Zhang W., Wang Z., Ghose A., Bucchiarone A.},
publisher={Springer Verlag},
issn={03029743},
isbn={9783030176419},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Ed-Douibi2018181,
author={Ed-Douibi, H. and Canovas Izquierdo, J.L. and Cabot, J.},
title={Automatic generation of test cases for REST APIs: A specification-based approach},
journal={Proceedings - 2018 IEEE 22nd International Enterprise Distributed Object Computing Conference, EDOC 2018},
year={2018},
pages={181-190},
doi={10.1109/EDOC.2018.00031},
art_number={8536162},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85059082061&doi=10.1109%2fEDOC.2018.00031&partnerID=40&md5=af14dba0564dfaa390ed8f332009d8e7},
affiliation={Internet Interdisciplinary Institute (IN3), Universitat Oberta de Catalunya (UOC), Barcelona, Spain; ICREA, Universitat Oberta de Catalunya (UOC), Barcelona, Spain},
abstract={The REpresentation State Transfer (REST) has gained momentum as the preferred technique to design Web APIs. REST allows building loosely coupled systems by relying on HTTP and the Web-friendly format JSON. However, REST is not backed by any standard or specification to describe how to create/consume REST APIs, thus creating new challenges for their integration, testing and verification. To face this situation, several specification formats have been proposed (e.g., OpenAPI, RAML, and API Blueprint), which can help automate tasks in REST API development (e.g., testing) and consumption (e.g., SDKs generation). In this paper we focus on automated REST API testing relying on API specifications, and particularly the OpenAPI one. We propose an approach to generate specification-based test cases for REST APIs to make sure that such APIs meet the requirements defined in their specifications. We provide a proof-of-concept tool implementing our approach, which we have validated with 91 OpenAPI definitions. Our experiments show that the generated test cases cover on average 76.5% of the elements included in the OpenAPI definitions. Furthermore, our experiments also reveal that 40% of the tested APIs fail. © 2018 IEEE.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781538641392},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={all}
}

@CONFERENCE{Laycock2018,
author={Laycock, P.J. and Dykstra, D. and Formica, A. and Govi, G. and Pfeiffer, A. and Roe, S. and Sipos, R.},
title={A Conditions Data Management System for HEP Experiments},
journal={Journal of Physics: Conference Series},
year={2018},
volume={1085},
number={3},
doi={10.1088/1742-6596/1085/3/032040},
art_number={032040},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85055645789&doi=10.1088%2f1742-6596%2f1085%2f3%2f032040&partnerID=40&md5=4c37d5a8007e4d9519915ede1297c406},
affiliation={CERN, Switzerland; Fermilab, Switzerland; CEA Saclay, France; MTA-ELTE Lendület CMS Particle and Nuclear Physics Group, Eötvös Loránd University, Budapest, Hungary},
abstract={Conditions data infrastructure for both ATLAS and CMS have to deal with the management of several terabytes of data [1, 2]. Distributed computing access to this data requires particular care and attention to manage request-rates of up to several tens of kHz. Thanks to the large overlap in use cases and requirements, ATLAS and CMS have worked towards a common solution for conditions data management with the aim of using this design for data-taking in Run 3. In the meantime other experiments, including NA62, have expressed an interest in this cross-experiment initiative. For experiments with a smaller payload volume and complexity, there is particular interest in having simple payload storage. The conditions data management model is implemented in a small set of relational database tables. A prototype access toolkit consisting of an intermediate web server has been implemented, using standard technologies available in the Java community. Access is provided through a set of REST services for which the API has been described in a generic way using standard Open API specifications, implemented in Swagger. Such a solution allows the automatic generation of client code and server stubs and further allows changes in the backend technology transparently. An important advantage of using a REST API for conditions access is the possibility of caching identical URLs, addressing one of the biggest challenges that large distributed computing solutions impose on conditions data access, avoiding direct DB access by means of standard web proxy solutions. © 2018 Institute of Physics Publishing. All rights reserved.},
publisher={Institute of Physics Publishing},
issn={17426588},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec},
mrs_exclusion_criteria={irrelevant_purpose, not_cs_journal}
}

@CONFERENCE{DiMartino2018375,
author={Di Martino, B. and Posillipo, A. and Nacchia, S. and Maisto, S.A.},
title={A Q&A tool to produce an Ad-Hoc OpenAPI specification to identify equivalent REST Api Services},
journal={Proceedings - 2018 IEEE International Conference on Smart Computing, SMARTCOMP 2018},
year={2018},
pages={375-380},
doi={10.1109/SMARTCOMP.2018.00032},
art_number={8421389},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051564601&doi=10.1109%2fSMARTCOMP.2018.00032&partnerID=40&md5=996cb1ded2c52c987c2696b3a751a9e6},
affiliation={Universita degli Studi della Campania 'Luigi Vanvitelli', Department of Industrial and Information Engineering, via Roma 29, Aversa, 81031, Italy},
abstract={The highly heterogeneous environment of IoT (Internet of Things) and Smart cities guarantees that every stakeholder's requirements can be achieved and implemented. However deciding which is the most appropriate sensor to adopt among various similar ones and, even most important, how to use it is not an easy task; a task that, as of today, cannot be done without access to source code or documentation. Moreover heterogeneity in descriptions and definitions complicate sensor interfaces comparison and selection, and may create interoperability and portability problems among multiple providers. In this work we aim at providing a Q&A tool that guides the user in the production of a RESTApi sensor's interfaces according to the OpenAPI specification. The automatically produced ad-hoc specification is used as a base for defining sensors' interfaces equivalence and similarity using natural language processing techniques. © 2018 IEEE.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781538647059},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Folmer201849,
author={Folmer, E. and Beek, W. and Rietveld, L.},
title={Linked data viewing as part of the spatial data platform of the future},
journal={International Archives of the Photogrammetry, Remote Sensing and Spatial Information Sciences - ISPRS Archives},
year={2018},
volume={42},
number={4W8},
pages={49-52},
doi={10.5194/isprs-archives-XLII-4-W8-49-2018},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051498188&doi=10.5194%2fisprs-archives-XLII-4-W8-49-2018&partnerID=40&md5=ad4b3a6db2b818570bcedb4158056880},
affiliation={Kadaster, Apeldoorn, Netherlands; University of Twente, Twente, Netherlands; Triply, Amsterdam, Netherlands; VU University Amsterdam, Amsterdam, Netherlands},
abstract={The Land Registry and Mapping Agency of the Netherlands ('Kadaster' in Dutch) is developing an online publication platform for sharing its geospatial data assets called KDP ('Kadaster Data Platform' in Dutch). One of the main goals of this platform is to better share geospatial data with the wider, web-oriented world, including its developers, approaches, and standards. Linked Open Data (W3C), GeoSPARQL (OGC), and Open APIs (OpenAPI Specification) are the predominant standardized approaches for this purpose. As a result, the most important spatial datasets of the Netherlands - including several key registries - are now being published as Linked Open Data that can be accessed through a SPARQL endpoint and a collection of REST APIs. In addition to providing raw access to the data, Kadaster Data Platform also offers developers functionalities that allow them to gain a better understanding about the contents of its datasets. These functionalities include various ways for viewing Linked Data . This paper focuses on two of the main components the Kadaster Data Platform is using for this purpose: FacetCheck and Data Stories. © Authors 2018.},
editor={Namangaya A.H., Brovelli M.A.},
publisher={International Society for Photogrammetry and Remote Sensing},
issn={16821750},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec},
mrs_exclusion_criteria={irrelevant_purpose, not_cs_journal}
}

@CONFERENCE{Sanchez2018537,
author={Sanchez, B.A. and Barmpis, K. and Neubauer, P. and Paige, R.F. and Kolovos, D.S.},
title={Restmule: Enabling resilient clients for remote APIs},
journal={Proceedings - International Conference on Software Engineering},
year={2018},
pages={537-541},
doi={10.1145/3196398.3196405},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051676109&doi=10.1145%2f3196398.3196405&partnerID=40&md5=4670f577356f7ac7c598c20d800ef0d1},
affiliation={Department of Computer Science, University of York, York, United Kingdom},
abstract={Mining data from remote repositories, such as GitHub and StackExchange, involves the execution of requests that can easily reach the limitations imposed by the respective APIs to shield their services from overload and abuse. Therefore, data mining clients are left alone to deal with such protective service policies which usually involves an extensive amount of manual implementation effort. In this work we present RestMule, a framework for handling various service policies, such as limited number of requests within a period of time and multi-page responses, by generating resilient clients that are able to handle request rate limits, network failures, response caching, and paging in a graceful and transparent manner. As a result, RestMule clients generated from OpenAPI specifications (i.e. standardized REST API descriptors), are suitable for intensive data-fetching scenarios. We evaluate our framework by reproducing an existing repository mining use case and comparing the results produced by employing a popular hand-written client and a RestMule client. © 2018 ACM.},
publisher={IEEE Computer Society},
issn={02705257},
isbn={9781450357166},
coden={PCSED},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Challita2018177,
author={Challita, S. and Zalila, F. and Gourdin, C. and Merle, P.},
title={A precise model for Google cloud platform},
journal={Proceedings - 2018 IEEE International Conference on Cloud Engineering, IC2E 2018},
year={2018},
pages={177-183},
doi={10.1109/IC2E.2018.00041},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85048310407&doi=10.1109%2fIC2E.2018.00041&partnerID=40&md5=b7d50bea18a09c874171936df2e5baf1},
affiliation={Inria Lille - Nord Europe, University of Lille, CRIStAL UMR CNRS 9189, France},
abstract={Today, Google Cloud Platform (GCP) is one of the leaders among cloud APIs. Although it was established only five years ago, GCP has gained notable expansion due to its suite of public cloud services that it based on a huge, solid infrastructure. GCP allows developers to use these services by accessing GCP RESTful API that is described through HTML pages on its website. However, the documentation of GCP API is written in natural language (English prose) and therefore shows several drawbacks, such as Informal Heterogeneous Documentation, Imprecise Types, Implicit Attribute Metadata, Hidden Links, Redundancy and Lack of Visual Support. To avoid confusion and misunderstandings, the cloud developers obviously need a precise specification of the knowledge and activities in GCP. Therefore, this paper introduces GCP Model, an inferred formal model-driven specification of GCP which describes without ambiguity the resources offered by GCP. GCP Model is conform to the Open Cloud Computing Interface (OCCI) metamodel and is implemented based on the open source model-driven Eclipse-based OCCIware tool chain. Thanks to our GCP Model, we offer corrections to the drawbacks we identified. © 2018 IEEE.},
editor={Li J., Chandra A., Guo T., Cai Y.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781538650080},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@ARTICLE{Palma2018,
author={Palma, F. and Moha, N. and Gueheneuc, Y.},
title={UniDoSA: The Unified Specification and Detection of Service Antipatterns},
journal={IEEE Transactions on Software Engineering},
year={2018},
doi={10.1109/TSE.2018.2819180},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85044354578&doi=10.1109%2fTSE.2018.2819180&partnerID=40&md5=a935c9a2c32fa3cf011540e8bbedda22},
affiliation={Computer Science, Linnaeus University, Kalmar, Kalmar Sweden (e-mail: francispalmaphd@gmail.com), Sweden; Computer Science, Universite du Quebec a Montreal, 14845 Montreal, Quebec Canada (e-mail: moha.naouel@uqam.ca), Canada; Computer Science, Concordia University, 5618 Montreal, Quebec Canada (e-mail: yann-gael.gueheneuc@polymtl.ca)},
abstract={Service-based Systems (SBSs) are developed on top of diverse Service-Oriented Architecture (SOA) technologies or architectural styles. Like any other complex systems, SBSs face both functional and non-functional changes at the design or implementation-level. Such changes may degrade the design quality and quality of service (QoS) of the services in SBSs by introducing poor solutions-service antipatterns. The presence of service antipatterns in SBSs may hinder the future maintenance and evolution of SBSs. Assessing the quality of design and QoS of SBSs through the detection of service antipatterns may ease their maintenance and evolution. However, the current literature lacks a unified approach for modelling and evaluating the design of SBSs in term of design quality and QoS. To address this lack, this paper presents a meta-model unifying the three main service technologies: REST, SCA, and SOAP. Using the meta-model, it describes a unified approach, UniDoSA (Unified Specification and Detection of Service Antipatterns), supported by a framework, SOFA (Service Oriented Framework for Antipatterns), for modelling and evaluating the design quality and QoS of SBSs. We apply and validate UniDoSA on: (1) 18 RESTful APIs, (2) two SCA systems with more than 150 services, and (3) more than 120 SOAP Web services. With a high precision and recall, the detection results provide evidence of the presence of service antipatterns in SBSs, which calls for future studies of their impact on QoS. IEEE},
publisher={Institute of Electrical and Electronics Engineers Inc.},
issn={00985589},
coden={IESED},
language={English},
document_type={Article in Press},
source={Scopus},
mrs_inclusion_criteria={all}
}

@ARTICLE{Ed-Douibi2018487,
author={Ed-Douibi, H. and Cánovas Izquierdo, J.L. and Cabot, J.},
title={OpenAPItoUML: A tool to generate UML models from OpenAPI definitions},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2018},
volume={10845 LNCS},
pages={487-491},
doi={10.1007/978-3-319-91662-0_41},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85047971999&doi=10.1007%2f978-3-319-91662-0_41&partnerID=40&md5=038d5555f82705aa23d069e26658c0c0},
affiliation={UOC, Barcelona, Spain; ICREA, Barcelona, Spain},
abstract={REpresentational State Transfer (REST) has become the prominent architectural style for designing Web APIs. This increasing adoption has triggered the creation of languages to formally describe REST APIs, thus facilitating and promoting their usage. In particular, a consortium of companies has created the OpenAPI Initiative, which aims at creating a vendor neutral, portable, standard and open specification for describing REST APIs. OpenAPI specification has become the choice of reference for describing REST APIs, and its adopters can benefit from a plethora of tools for documenting, developing and integrating REST APIs. However, current documentation tools for OpenAPI only describe REST APIs in HTML pages using text and code samples, thus requiring a considerable effort to visualize and understand what the APIs offer. In this paper, we propose a tool called OpenAPItoUML, which generates UML models from OpenAPI definitions, thus offering a better visualization of the data model and operations of REST APIs. © Springer International Publishing AG, part of Springer Nature 2018.},
editor={Mikkonen T., Klamma R., Hernandez J.},
publisher={Springer Verlag},
issn={03029743},
isbn={9783319916613},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Camacho20185817,
author={Camacho, A. and Muise, C. and Baier, J.A. and McIlraith, S.A.},
title={SynKit: LTL synthesis as a service},
journal={IJCAI International Joint Conference on Artificial Intelligence},
year={2018},
volume={2018-July},
pages={5817-5819},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85055716783&partnerID=40&md5=98ab363c1559fe953089d0c0ee616b49},
affiliation={Department of Computer Science, University of Toronto, Japan; CSAIL, Massachusetts Institute of Technology, Japan; Pontificia Universidad Católica de Chile, Japan; Chilean Center for, Semantic Web Research, Japan},
abstract={Automatic synthesis of software from specification is one of the classic problems in computer science. In the last decade, significant advances have been made in the synthesis of programs from specifications expressed in Linear Temporal Logic (LTL). LTL synthesis technology is central to a myriad of applications from the automated generation of controllers for Internet of Things devices, to the synthesis of control software for robotic applications. Unfortunately, the number of existing tools for LTL synthesis is limited, and using them requires specialized expertise. In this paper we present SynKit, a tool that offers LTL synthesis as a service. SynKit integrates a RESTful API and a web service with an editor, a solver, and a strategy visualizer. © 2018 International Joint Conferences on Artificial Intelligence.All right reserved.},
editor={Lang J.},
publisher={International Joint Conferences on Artificial Intelligence},
issn={10450823},
isbn={9780999241127},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec}
}

@CONFERENCE{Nugroho2017,
author={Nugroho, L.E. and Azis, A. and Mustika, I.W. and Selo},
title={Development of RESTful API to support the oil palm plantation monitoring system},
journal={Proceedings - 2017 7th International Annual Engineering Seminar, InAES 2017},
year={2017},
doi={10.1109/INAES.2017.8068545},
art_number={8068545},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85037116134&doi=10.1109%2fINAES.2017.8068545&partnerID=40&md5=991a2cb98e4b7780df184f875f614b94},
affiliation={Department of Electrical Engineering and Information Technology, Universitas Gadjah Mada, Indonesia},
abstract={In this research, RESTful API as a service provider of data resource of oil palm plantation from the database using Resource-Oriented Architecture (ROA)-Slim Framework is developed. This development is able to result in a series of URI to access the data resources of the condition of the plantation environment as the support of monitoring system in oil palm plantation. Based upon the result of the test on functionality, it has been found that API as the support of the monitoring system of oil palm plantation has fulfilled the basic needs of the process of monitoring the condition of oil palm environment in accordance with the design specification referred to the needs identification. © 2017 IEEE.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781538631119},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec, not_cs_journal}
}

@CONFERENCE{Liu2017708,
author={Liu, S. and Li, Y. and Sun, G. and Fan, B. and Deng, S.},
title={Hierarchical RNN Networks for Structured Semantic Web API Model Learning and Extraction},
journal={Proceedings - 2017 IEEE 24th International Conference on Web Services, ICWS 2017},
year={2017},
pages={708-713},
doi={10.1109/ICWS.2017.85},
art_number={8029826},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85032360989&doi=10.1109%2fICWS.2017.85&partnerID=40&md5=ac8a1bfa2a38a21b38216ff479e9b071},
affiliation={College of Computer Science, Zhejiang University, Hangzhou, China; Binhai Industrial Technology Research Institute, Zhejiang University, Tianjin, China},
abstract={RESTful Web APIs have no description files like WSDL in traditional Web service. Although some REST API definition models have been arising recently, there is still lacking in structured description format for existing large mounts of Web APIs. Almost all Web APIs are documented in semi-structured web pages, and these documentation formats are various for different sites. It's hard for machine to read the semantics of Web APIs. In this paper, we have proposed a novel hierarchical recurrent neural network to convert REST API documentation to structured machine-readable description format-The Swagger REST API specification. The network extracts the Swagger defined attributes of a REST API from HTML web pages without any feature engineering. With the extracted API specifications, we built an API repository to index, search and compose Web APIs. Experiment showed that the hierarchical RNN model performed well even with only a few training samples. © 2017 IEEE.},
editor={Chen S., Altintas I.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781538607527},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={not_cs_journal}
}

@ARTICLE{Frangoudis2017702,
author={Frangoudis, P.A. and Yala, L. and Ksentini, A.},
title={CDN-As-a-Service Provision over a Telecom Operator's Cloud},
journal={IEEE Transactions on Network and Service Management},
year={2017},
volume={14},
number={3},
pages={702-716},
doi={10.1109/TNSM.2017.2710300},
art_number={7936595},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85029353135&doi=10.1109%2fTNSM.2017.2710300&partnerID=40&md5=48e72f00db78a7bba1252a5c45e1ea91},
affiliation={Communication Systems Department, EURECOM, Sophia Antipolis, 06904, France; IRISA/University of Rennes 1, Rennes, 35042, France},
abstract={We present the design and implementation of a content-delivery-network-as-a-service (CDNaaS) architecture, which allows a telecom operator to open up its cloud infrastructure for content providers to deploy virtual content delivery network (CDN) instances on demand, at regions where the operator has presence. Using northbound REST APIs, content providers can express performance requirements and demand specifications, which are translated to an appropriate service placement on the underlying cloud substrate. Our architecture is extensible, supporting various different CDN flavors, and, in turn, different schemes for cloud resource allocation and management. In order to decide on the latter in an optimal manner from an infrastructure cost and a service quality perspective, knowledge of the performance capabilities of the underlying technologies, and compute resources is critical. Therefore, to gain insight which can be applied to the design of such mechanisms, but also with further implications on service pricing and SLA design, we carry out a measurement campaign to evaluate the capabilities of key enabling technologies for CDNaaS provision. In particular, we focus on virtualization and containerization technologies for implementing virtual CDN functions to deliver a generic HTTP service, as well as an HTTP video streaming one, empirically capturing the relationship between performance and service workload, both from a system operator and a user-centric viewpoint. © 2004-2012 IEEE.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
issn={19324537},
language={English},
document_type={Article},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec}
}

@ARTICLE{Zundel20171161,
author={Zundel, Z. and Samineni, M. and Zhang, Z. and Myers, C.J.},
title={A Validator and Converter for the Synthetic Biology Open Language},
journal={ACS Synthetic Biology},
year={2017},
volume={6},
number={7},
pages={1161-1168},
doi={10.1021/acssynbio.6b00277},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85020872903&doi=10.1021%2facssynbio.6b00277&partnerID=40&md5=4663496be2f4eb83e852ba7206f1819f},
affiliation={Department of Bioengineering, University of Utah, 36 S. Wasatch Drive, Salt Lake City, UT  84112, United States; Department of Electrical and Computer Engineering, University of Utah, 50 S. Central Campus Drive, Salt Lake City, UT  84112, United States; Department of Computer Science and Engineering, University of South Florida, 4202 E. Fowler Avenue, Tampa, FL  33620, United States},
abstract={This paper presents a new validation and conversion utility for the Synthetic Biology Open Language (SBOL). This utility can be accessed directly in software using the libSBOLj library, through a web interface, or using a web service via RESTful API calls. The validator checks all required and best practice rules set forth in the SBOL specification document, and it reports back to the user the location within the document of any errors found. The converter is capable of translating from/to SBOL 1, GenBank, and FASTA formats to/from SBOL 2. The SBOL Validator/Converter utility is released freely and open source under the Apache 2.0 license. The online version of the validator/converter utility can be found here: http://www.async.ece.Utah.edu/sbol-validator/. The source code for the validator/converter can be found here: http://github.com/SynBioDex/SBOL-Validator/. © 2016 American Chemical Society.},
publisher={American Chemical Society},
issn={21615063},
language={English},
document_type={Article},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec, not_cs_journal}
}

@CONFERENCE{Wåhslén20171143,
author={Wåhslén, J. and Lindh, T.},
title={Real-time performance management of assisted living services for Bluetooth low energy sensor communication},
journal={Proceedings of the IM 2017 - 2017 IFIP/IEEE International Symposium on Integrated Network and Service Management},
year={2017},
pages={1143-1148},
doi={10.23919/INM.2017.7987452},
art_number={7987452},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85029408358&doi=10.23919%2fINM.2017.7987452&partnerID=40&md5=40d4f26f3ce1291fadce4a99fed0057e},
affiliation={School of Technology and Health, KTH, Stockholm, Sweden},
abstract={PerfMon is a prototype implementation of a real-time performance management method for sensor data communication in assisted living applications. It is implemented in accordance with the specification for GATT services in Bluetooth low energy (BLE). PerfMon provides a tool for real-time performance monitoring and control for caregivers and service providers. Test results from monitoring and control of packet loss ratio related to alarm thresholds are presented. PerfMon is adapted to cloud-based web services using RESTful APIs and established object models. Performance management is a necessary component in an overall management system of IoT devices for healthcare and assisted living applications. © 2017 IFIP.},
editor={Chemouil P., Simoes P., Madeira E., Secci S., Monteiro E., Gaspary L.P., dos Santos C.R.P., Charalambides M.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9783901882890},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec}
}

@CONFERENCE{Sanchez2017139,
author={Sanchez, Y.K.R. and Demurjian, S.A. and Baihan, M.S.},
title={Achieving RBAC on RESTful APIs for Mobile Apps Using FHIR},
journal={Proceedings - 5th IEEE International Conference on Mobile Cloud Computing, Services, and Engineering, MobileCloud 2017},
year={2017},
pages={139-144},
doi={10.1109/MobileCloud.2017.22},
art_number={7944884},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85022078552&doi=10.1109%2fMobileCloud.2017.22&partnerID=40&md5=d23e9fcf8b58f9c0d9e4c9c7aff589dd},
affiliation={Department of Computer Science and Engineering, University of Connecticut, Storrs, CT, United States},
abstract={Health Information Exchange (HIE) provides a morecomplete health record of an individual that improves patientcare with relevant data gathered from multiple healthinformation technology (HIT) systems. In support of HIE, theHealth Level Seven (HL7) XML standard was developed tomanage, exchange, integrate, and retrieve electronic healthinformation. In 2011, HL7 began drafting a next-generationstandard, Fast Healthcare Interoperable Resources (FHIR), tofacilitate the development and interaction of mobile health(mHealth) apps, HIT data sharing, and common format forinformation modeling. FHIR is based on RESTful APIs andsupported by a FHIR server infrastructure that facilitates theexchange in a cloud computing setting. FHIR while possessing asecurity specification, has yet to define and identify actualsecurity mechanisms for secure data exchange via RESTful APIcalls. In this paper, we incorporate role-based access control(RBAC) into FHIR to support the ability to control access ofwho can call which services of FHIR RESTful APIs that managesensitive healthcare data. The work is demonstrated utilizing amHealth application that communicates with the OpenEMRelectronic health record via the HAPI FHIR server. © 2017 IEEE.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781509063253},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec}
}

@CONFERENCE{Mazumder2017150,
author={Mazumder, M. and Braje, T.},
title={Safe Client/Server Web Development with Haskell},
journal={Proceedings - 2016 IEEE Cybersecurity Development, SecDev 2016},
year={2017},
pages={150},
doi={10.1109/SecDev.2016.040},
art_number={7839809},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85015225668&doi=10.1109%2fSecDev.2016.040&partnerID=40&md5=82c9c4059471866018aa44d651910c70},
affiliation={MIT Lincoln Laboratory, United States},
abstract={We demonstrate how two Haskell libraries - Reflex-Dom and Servant - provide a powerful and complete web development framework which uses typechecking to guarantee many security and correctness properties on both the client and the server. With types as our guide, we can ensure that the data passed to our API is of the right shape, that we are forced to sanitize user input (eliminating most of the possibilities for SQL injection or XSS attacks), and that user input errors are guaranteed to be handled. We use Reflex, a Functional Reactive Programming engine, compiled with GHCJS (the Haskell-to-JavaScript transpiler) to lift user input into a safe representation. Types are used to enforce that all required data is requested from a user before the user can proceed to the next action in a workflow. Malformed user input is also cleanly separated at the type level for automatic reporting and recovery. Tutorial exercises will highlight Servant's guarantees that a REST API is fully specified for all possible user inputs and return conditions. Tutorial attendees will gain an appreciation of how much work this up-front specification can save in development time. For example, Servant knows what all of your endpoints are, and serves error pages for everything else. Servant can also safely handle data conversions from the world of untyped Strings into the typesafe world of your API. © 2016 IEEE.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781509055883},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec}
}

@ARTICLE{Cao2017453,
author={Cao, H. and Falleri, J.-R. and Blanc, X.},
title={Automated generation of REST API specification from plain HTML documentation},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2017},
volume={10601 LNCS},
pages={453-461},
doi={10.1007/978-3-319-69035-3_32},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85034110527&doi=10.1007%2f978-3-319-69035-3_32&partnerID=40&md5=dda9c0d22ac5c73a0c46ed7dfcd4d615},
affiliation={University of Bordeaux, LaBRI, UMR 5800, Talence, 33400, France},
abstract={REST is nowadays highly popular and widely adopted by Web services providers. However, most of the Web services providers only provide the documentation of their REST API in plain HTML pages, even if many specification formats exist such as WADL or OpenAPI for example. This prevents the Web Services users to benefit from all the advantages of having a machine-readable specification, such as generating client or server code, generating web services composition, checking formal properties, testing, etc. To face this issue, we provide a fully automated approach that builds a REST API specification from its corresponding plain HTML documentation. By given the root URL of the plain HTML API documentation, our approach automatically extracts the four mandatory parts that compose a specification: the base URL, the path templates, the HTTP verbs and the associated formal parameters. Our approach has been validated with topmost commercial REST based Web Services, and the validation shows that our approach achieves good precision and recall for popular Web Services. © Springer International Publishing AG 2017.},
editor={Oriol M., Vallecillo A., Maximilien M., Wang J.},
publisher={Springer Verlag},
issn={03029743},
isbn={9783319690346},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@ARTICLE{Gamez-Diaz2017589,
author={Gamez-Diaz, A. and Fernandez, P. and Ruiz-Cortes, A.},
title={An analysis of RESTful APIs offerings in the industry},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2017},
volume={10601 LNCS},
pages={589-604},
doi={10.1007/978-3-319-69035-3_43},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85034101448&doi=10.1007%2f978-3-319-69035-3_43&partnerID=40&md5=9b524289bb8a84dbf87d1bed5a03b845},
affiliation={Universidad de Sevilla, Seville, Spain},
abstract={As distribution models of information systems are moving to XaaS paradigms, microservices architectures are rapidly emerging, having the RESTful principles as the API model of choice. In this context, the term of API Economy is being used to describe the increasing movement of the industries in order to take advantage of exposing their APIs as part of their service offering and expand its business model. Currently, the industry is adopting standard specifications such as OpenAPI to model the APIs in a standard way following the RESTful principles; this shift has supported the proliferation of API execution platforms (API Gateways) that allow the XaaS to optimize their costs. However, from a business point of view, modeling offering plans of those APIs is mainly done ad-hoc (or in a platform-dependent way) since no standard model has been proposed. This lack of standardization hinders the creation of API governance tools in order to provide and automate the management of business models in the XaaS industry. This work presents a systematic analysis of 69 XaaS in the industry that offer RESTful APIs as part of their business model. Specifically, we review in detail the plans that are part of the XaaS offerings that could be used as a first step to identify the requirements for the creation of an expressive governance model of realistic RESTful APIs. Additionally, we provide an open dataset in order to enable further analysis in this research line. © Springer International Publishing AG 2017.},
editor={Oriol M., Vallecillo A., Maximilien M., Wang J.},
publisher={Springer Verlag},
issn={03029743},
isbn={9783319690346},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Demeranville201795,
author={Demeranville, T. and Brown, J. and Dvořák, J. and Karaiskos, D.C.},
title={Towards a CERIF-Orcid API Adaptor: A Progress Report},
journal={Procedia Computer Science},
year={2017},
volume={106},
pages={95-99},
doi={10.1016/j.procs.2017.03.040},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85020701128&doi=10.1016%2fj.procs.2017.03.040&partnerID=40&md5=b5cd2a6d85b3ded4a98c9438e85de799},
affiliation={ORCID EU, Rue Dupré 15, Bruxelles, 1090, Belgium; EuroCRIS, Anna van Saksenlaan 51, Hague, 2593, Netherlands; Charles University in Prague, Institute of Information Studies and Librarianship, U Kříže 8, Praha 5, CZ-15800, Czech Republic; National Hellenic Research Foundation, National Documentation Center, 48 Vassileos Constantinou Ave., Athens, 11635, Greece},
abstract={This paper describes an experimental implementation of the CERIF API specification being used as an intermediary system to enable the communication of information from the ORCID registry as CERIF XML. This work builds on the strategic partnership between euroCRIS and ORCID, and was enabled by the EC-funded THOR project. The implementation surfaced several issues stemming from the differing data models required, and from constraints specific to ORCID's position as an international linking infrastructure, such as privacy. The paper summarises the lessons learned from this endeavour, and sets out a clear roadmap and recommendations for the community to come together to implement, expand and sustain this potentially very valuable component of the research information ecosystem. © 2017 The Authors.},
editor={Clements A., Sicilia M.-A., Simons E., de Castro P.},
publisher={Elsevier B.V.},
issn={18770509},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_rest_api, not_api_spec}
}

@ARTICLE{Meroño-Peñuela2017334,
author={Meroño-Peñuela, A. and Hoekstra, R.},
title={Automatic query-centric API for routine access to linked data},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2017},
volume={10588 LNCS},
pages={334-349},
doi={10.1007/978-3-319-68204-4_30},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85032190214&doi=10.1007%2f978-3-319-68204-4_30&partnerID=40&md5=064f5376324d64101859d9f4be8b4afa},
affiliation={Computer Science Department, Vrije Universiteit Amsterdam, Amsterdam, Netherlands; Faculty of Law, University of Amsterdam, Amsterdam, Netherlands},
abstract={Despite the advatages of Linked Data as a data integration paradigm, accessing and consuming Linked Data is still a cumbersome task. Linked Data applications need to use technologies such as RDF and SPARQL that, despite their expressive power, belong to the data integration stack. As a result, applications and data cannot be cleanly separated: SPARQL queries, endpoint addresses, namespaces, and URIs end up as part of the application code. Many publishers address these problems by building RESTful APIs around their Linked Data. However, this solution has two pitfalls: these APIs are costly to maintain; and they blackbox functionality by hiding the queries they use. In this paper we describe grlc, a gateway between Linked Data applications and the LOD cloud that offers a RESTful, reusable and uniform means to routinely access any Linked Data. It generates an OpenAPI compatible API by using parametrized queries shared on the Web. The resulting APIs require no coding, rely on low-cost external query storage and versioning services, contain abundant provenance information, and integrate access to different publishing paradigms into a single API. We evaluate grlc qualitatively, by describing its reported value by current users; and quantitatively, by measuring the added overhead at generating API specifications and answering to calls. © Springer International Publishing AG 2017.},
editor={Fernandez M., d'Amato C., Tamma V., Cudre-Mauroux P., Lecue F., Lange C., Sequeda J., Heflin J.},
publisher={Springer Verlag},
issn={03029743},
isbn={9783319682037},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Wijeratne2017437,
author={Wijeratne, S. and Balasuriya, L. and Sheth, A. and Doran, D.},
title={EmojiNet: An open service and API for emoji sense discovery},
journal={Proceedings of the 11th International Conference on Web and Social Media, ICWSM 2017},
year={2017},
pages={437-446},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85029446461&partnerID=40&md5=378e406e6f239828aa0c36bf48b3d63f},
affiliation={Kno.e.sis Center, Wright State University, Dayton, OH, United States},
abstract={This paper presents the release of EmojiNet, the largest machine-readable emoji sense inventory that links Unicode emoji representations to their English meanings extracted from the Web. EmojiNet is a dataset consisting of: (i) 12,904 sense labels over 2,389 emoji, which were extracted from the web and linked to machine-readable sense definitions seen in BabelNet; (ii) context words associated with each emoji sense, which are inferred through word embedding models trained over Google News corpus and a Twitter message corpus for each emoji sense definition; and (iii) recognizing discrepancies in the presentation of emoji on different platforms, specification of the most likely platformbased emoji sense for a selected set of emoji. The dataset is hosted as an open service with a REST API and is available at http://emojinet.knoesis.org/. The development of this dataset, evaluation of its quality, and its applications including emoji sense disambiguation and emoji sense similarity are discussed. © Copyright 2017, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.},
publisher={AAAI Press},
isbn={9781577357889},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec}
}

@CONFERENCE{Ruokonen2016127,
author={Ruokonen, A. and Wu, Z. and Lu, R.},
title={Describing mobile devices as RESTful services for the end-users},
journal={Proceedings - 2016 IEEE International Conference on Mobile Services, MS 2016},
year={2016},
pages={127-134},
doi={10.1109/MobServ.2016.27},
art_number={7787064},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85010420468&doi=10.1109%2fMobServ.2016.27&partnerID=40&md5=2c90f6303d42d4b4f10d77795cfafdca},
affiliation={Department of Pervasive Computing, Tampere University of Technology, Tampere, Finland; Department of Electronic Engineering, City University of Hong Kong, Kowloon Tong, Hong Kong},
abstract={This paper presents an end-user oriented approach of describing mobile devices as RESTful services. The mobile services are provided to the end-users through a centralized server. To enable plugging of devices, they provide a machine-processable device description with detailed specification of their RESTful API. The device description is used to generate required user interface as well as generating the RESTful invocations. We provide general guidelines on how to design a REST API for a mobile device and a device description for machine-to-machine interactions. The approach is demonstrated by building a centralized marketplace to promote and use available mobile services. The central marketplace acts as a broker for the dynamic mobile services. In addition, we use two case study applications to demonstrate the service registration, provisioning, and usage. © 2016 IEEE.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781509026258},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec}
}

@ARTICLE{McGrath2016283,
author={McGrath, H. and Stefanakis, E. and Nastev, M.},
title={DEM fusion of elevation REST API data in support of rapid flood modelling},
journal={Geomatica},
year={2016},
volume={70},
number={4},
pages={283-297},
doi={10.5623/cig2016-402},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-85019071278&doi=10.5623%2fcig2016-402&partnerID=40&md5=0871dc653c56fca694b2c06bcb164c9b},
affiliation={University of New Brunswick, Fredericton, Canada; Natural Resources Canada, Geological Survey of Canada, Quebec City, Canada},
abstract={Digital elevation models (DEM) are an integral part of flood modelling. High resolution DEM data are not always available or affordable for communities, thus other elevation data sources are explored. While the accuracy of some of these sources has been rigorously tested (e.g., SRTM, ASTER), others, such as Natural Resources Canada’s Canadian Digital Elevation Model (CDEM) and Google and Bings’ Elevation REST APIs, have not yet been properly evaluated. Details pertaining to acquisition source and accuracy are often unreported for APIs. To include these data in geospatial applications and test and reduce uncertainty, data fusion is explored. Thus, this paper introduces a new method of elevation data fusion. The novel method incorporates clustering and inverse distance weighting (IDW) concepts in the computation of a new fusion elevation surface. The results of the individual DEMs and fusion DEMs are compared to high-resolution Light Detection and Ranging (LiDAR) surface and flood inundation maps for two study areas in New Brunswick. Comparison of individual surfaces to LiDAR find that the results meet their posted accuracy specifications, with the Bing data computing the smallest mean bias and the CDEM the smallest RMSE. Fusion of all three surfaces via the proposed method increases the correlation and minimizes both RMSE and mean bias when compared to LiDAR, independent of the terrain, thus producing a more accurate DEM. © 2016, Canadian Institute of Geomatics. All rights reserved.},
publisher={Canadian Institute of Geomatics},
issn={11951036},
language={English},
document_type={Article},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec, not_cs_journal}
}

@ARTICLE{Cosulschi2016117,
author={Cosulschi, M. and Giurca, A. and Gabroveanu, M.},
title={Querying, modifying and processing of RuleML knowledge bases},
journal={International Journal of Artificial Intelligence},
year={2016},
volume={14},
number={2},
pages={117-136},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984858131&partnerID=40&md5=4ad97b65fc63988515e044a8e8a33937},
affiliation={Department of Computer Science, University of Craiova, A. I. Cuza Street 13, Craiova, 200585, Romania; Soil Protection and Recultivation, Brandenburg University of Technology Cottbus-Senftenberg, Konrad-Wachsmann-Allee 6, Cottbus, 03046, Germany},
abstract={The RuleML family of languages deals with representation of rules and rulesets while rule storage and retrieval is completely neglected. In this paper, a model for a persistent storage for rules and an API specification for rules management is proposed. We implemented the Rulestore API as a RESTful Web service and used the prototype to validate and improve the proposed protocol. © 2016 [International Journal of Artificial Intelligence].},
publisher={CESER Publications},
issn={09740635},
language={English},
document_type={Article},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Frangoudis2016,
author={Frangoudis, P.A. and Yala, L. and Ksentini, A. and Taleb, T.},
title={An architecture for on-demand service deployment over a telco CDN},
journal={2016 IEEE International Conference on Communications, ICC 2016},
year={2016},
doi={10.1109/ICC.2016.7510921},
art_number={7510921},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981346623&doi=10.1109%2fICC.2016.7510921&partnerID=40&md5=192e0abc476b9e0544a0396b3cf48b27},
affiliation={IRISA, University of Rennes 1, France; Aalto University, Finland},
abstract={Internet Service Providers are becoming more involved in the audiovisual content delivery chain. One manifestation of this trend is the emergence of telco CDNs, i.e., content delivery networks operated by telecom service providers. In this work, we make the case for opening the telco CDN infrastructure to content providers by means of network function virtualization (NFV) and cloud technologies. We design and implement a CDN-as-a-Service architecture, where content providers can lease CDN resources on demand at regions where the ISP has presence. Using open northbound RESTful APIs, content providers can express performance requirements and demand specifications, which can be translated to an appropriate service placement on the underlying cloud substrate. To gain insight which can be applied to the design of such service placement mechanisms, we evaluate the capabilities of key enabling virtualization technologies by extensive testbed experiments. © 2016 IEEE.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781479966646},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec},
mrs_exclusion_criteria={irrelevant_purpose, not_cs_journal}
}

@ARTICLE{Petrillo2016157,
author={Petrillo, F. and Merle, P. and Moha, N. and Guéhéneuc, Y.-G.},
title={Are REST APIs for cloud computing well-designed? An exploratory study},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2016},
volume={9936 LNCS},
pages={157-170},
doi={10.1007/978-3-319-46295-0_10},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989298212&doi=10.1007%2f978-3-319-46295-0_10&partnerID=40&md5=a9ed170db31c2e5c4de838d7daeeeeee},
affiliation={Département d’informatique, Université du Québecà Montréal, Montreal, Canada; Equipe Spirals, Inria Lille - Nord Europe, Villeneuve d’Ascq, France; DGIGL, École Polytechnique, Montréal, Montreal, Canada; PPGC, Federal University of Rio Grande do Sul, Porto Alegre, Brazil},
abstract={Cloud computing is currently the most popular model to offer and access computational resources and services. Many cloud providers use the REST architectural style (Representational State Transfer) for offering such computational resources.However, these cloud providers face challenges when designing and exposing REST APIs that are easy to handle by end-users and/or developers. Yet, they benefit from best practices to help them design understandable and reusable REST APIs. However, these best practices are scattered in the literature and they have not be studied systematically on real-world APIs. Consequently, we propose two contributions. In our first contribution, we survey the literature and compile a catalog of 73 best practices in the design of REST APIs making APIs more understandable and reusable. In our second contribution, we perform a study of three different and well-known REST APIs from three cloud providers to investigate how their APIs are offered and accessed. These cloud providers are Google Cloud Platform, OpenStack, and Open Cloud Computing Interface (OCCI). In particular, we evaluate the coverage of the features provided by the REST APIs of these cloud providers and their conformance with the best practices for REST APIs design. Our results show that Google Cloud follows 66% (48/73), OpenStack follows 62% (45/73), and OCCI 1.2 follows 56% (41/73) of the best practices. Second, although these numbers are not necessarily high, partly because of the strict and precise specification of best practices, we showed that cloud APIs reach an acceptable level of maturity. © Springer International Publishing Switzerland 2016.},
editor={Tata S., Stroulia E., Bhiri S., Sheng Q.Z.},
publisher={Springer Verlag},
issn={03029743},
isbn={9783319462943},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={all}
}

@CONFERENCE{Cosulschi2015,
author={Cosulschi, M. and Giurca, A. and Gabroveanu, M.},
title={RuleStore: Towards a standard API for rule bases},
journal={ACM International Conference Proceeding Series},
year={2015},
volume={02-04-September-2015},
doi={10.1145/2801081.2801118},
art_number={a15},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958685415&doi=10.1145%2f2801081.2801118&partnerID=40&md5=7f790db7064ff7a4ee04c94315957fa5},
affiliation={Dept. of Computer Science, University of Craiova, A. I. Cuza Street 13, Craiova, 200585, Romania; Dept. of Marketing and Innovation, Brandenburg University of Technology Cottbus-Senftenberg, Erich-Weinert str.1, Cottbus, 03044, Germany},
abstract={Any rule-based system uses a knowledge base consists of a set of rules. Identifying a standard for storing and handling of rules and rulesets became a challenge. RuleML family of languages provides the interoperability framework for rules but does not specify any standard solution for rule storage and retrieval. In this paper we propose an model for a persistent storage for rules and an API specification for rules management. Our contribution aims to be aligned with the OMG specification towards a standard submission. © 2015 ACM.},
publisher={Association for Computing Machinery},
isbn={9781450333351},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_rest_api, not_api_spec}
}

@CONFERENCE{Fokaefs201581,
author={Fokaefs, M. and Stroulia, E.},
title={Using WADL Specifications to Develop and Maintain REST Client Applications},
journal={Proceedings - 2015 IEEE International Conference on Web Services, ICWS 2015},
year={2015},
pages={81-88},
doi={10.1109/ICWS.2015.21},
art_number={7195555},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84956694416&doi=10.1109%2fICWS.2015.21&partnerID=40&md5=b6ba81413c8d4da30316d393d6147e9a},
affiliation={Department of Computing Science, University of Alberta, Edmonton, AB, Canada},
abstract={Service orientation is one of the most popular paradigms for developing modular distributed software systems. In spite of the substantial research effort dedicated to the development of methods and tools to support SOAP-based service-oriented application development, in practice, Restful services have surpassed SOAP-based services in popularity and adoption, primarily due to the simplicity of their invocation. However, poor adoption of REST specification standards and lack of systematic development tools have given rise to many, more or less compliant, variants of the Restful style constraints, which undermine the evolvability and interoperability of these systems. In this paper, we describe a tool that supports the systematization of Restful application development, through the use of semi-automatically constructed WADL interface specifications, without compromising the ease of the overall practice. We illustrate the use and advantages of our tool on real-world REST APIs. Additionally, we comment on how REST APIs are documented, especially in comparison to the auto-generated WADLs. © 2015 IEEE.},
editor={Zhu H., Miller J.A.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781467380904},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@ARTICLE{Roman201539,
author={Roman, D. and Kopecký, J. and Vitvar, T. and Domingue, J. and Fensel, D.},
title={WSMO-Lite and hRESTS: Lightweight semantic annotations for Web services and RESTful APIs},
journal={Journal of Web Semantics},
year={2015},
volume={31},
pages={39-58},
doi={10.1016/j.websem.2014.11.006},
art_number={357},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938952786&doi=10.1016%2fj.websem.2014.11.006&partnerID=40&md5=7d7d63bf2a64c58e4f91a04b2bba0d31},
affiliation={SINTEF, Forskningsveien 1, Oslo, 0314, Norway; School of Computing, University of Portsmouth, Buckingham Building, Lion Terrace, Portsmouth, PO1 3HE, United Kingdom; Institut für Informatik, University of Innsbruck, Technikerstraße 21a, Innsbruck, 6020, Austria; STI Innsbruck, University of Innsbruck, Technikerstraße 21a, Innsbruck, 6020, Austria; Knowledge Media Institute, Open University, Walton Hall, Milton Keynes, MK7 6AA, United Kingdom},
abstract={Abstract Service-oriented computing has brought special attention to service description, especially in connection with semantic technologies. The expected proliferation of publicly accessible services can benefit greatly from tool support and automation, both of which are the focus of Semantic Web Service (SWS) frameworks that especially address service discovery, composition and execution. As the first SWS standard, in 2007 the World Wide Web Consortium produced a lightweight bottom-up specification called SAWSDL for adding semantic annotations to WSDL service descriptions. Building on SAWSDL, this article presents WSMO-Lite, a lightweight ontology of Web service semantics that distinguishes four semantic aspects of services: function, behavior, information model, and nonfunctional properties, which together form a basis for semantic automation. With the WSMO-Lite ontology, SAWSDL descriptions enable semantic automation beyond simple input/output matchmaking that is supported by SAWSDL itself. Further, to broaden the reach of WSMO-Lite and SAWSDL tools to the increasingly common RESTful services, the article adds hRESTS and MicroWSMO, two HTML microformats that mirror WSDL and SAWSDL in the documentation of RESTful services, enabling combining RESTful services with WSDL-based ones in a single semantic framework. To demonstrate the feasibility and versatility of this approach, the article presents common algorithms for Web service discovery and composition adapted to WSMO-Lite. © 2014 Elsevier B.V.},
publisher={Elsevier},
issn={15708268},
language={English},
document_type={Article},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Pazos2015640,
author={Pazos, N. and Muller, M. and Aeberli, M. and Ouerhani, N.},
title={ConnectOpen - Automatic integration of IoT devices},
journal={IEEE World Forum on Internet of Things, WF-IoT 2015 - Proceedings},
year={2015},
pages={640-644},
doi={10.1109/WF-IoT.2015.7389129},
art_number={7389129},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964489860&doi=10.1109%2fWF-IoT.2015.7389129&partnerID=40&md5=89d7bcbdfb35ee98224383de791427b4},
affiliation={Applied Science University Western Switzerland (HES-SO), HE-Arc Engineering School, Switzerland},
abstract={There exists, today, a wide consensus that Internet of Things (IoT) is creating a wide range of business opportunities for various industries and sectors like Manufacturing, Healthcare, Public infrastructure management, Telecommunications and many others. On the other hand, the technological evolution of IoT facing serious challenges. The fragmentation in terms of communication protocols and data formats at device level is one of these challenges. Vendor specific application architectures, proprietary communication protocols and lack of IoT standards are some reasons behind the IoT fragmentation. In this paper we propose a software enabled framework to address the fragmentation challenge. The framework is based on flexible communication agents that are deployed on a gateway and can be adapted to various devices communicating different data formats using different communication protocol. The communication agent is automatically generated based on specifications and automatically deployed on the Gateway in order to connect the devices to a central platform where data are consolidated and exposed via REST APIs to third party services. Security and scalability aspects are also addressed in this work. © 2015 IEEE.},
publisher={Institute of Electrical and Electronics Engineers Inc.},
isbn={9781509003655},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Alaya20141079,
author={Alaya, M.B. and Banouar, Y. and Monteil, T. and Chassot, C. and Drira, K.},
title={OM2M: Extensible ETSI-compliant M2M service platform with self-configuration capability},
journal={Procedia Computer Science},
year={2014},
volume={32},
pages={1079-1086},
doi={10.1016/j.procs.2014.05.536},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902652279&doi=10.1016%2fj.procs.2014.05.536&partnerID=40&md5=ce37b04fec790551eacd7aad584aedb4},
affiliation={CNRS, LAAS, 7 avenue du Colonel Roche, F-31400 Toulouse, France; INSA, LAAS, Université de Toulouse, F-31000 Toulouse, France},
abstract={Machine-to-Machine (M2 M) concept is one of the main features of Internet of Things (IoT). It promises to inter-connect billions of devices in near future covering various domains. However, M2 M suffers from a high vertical fragmentation of current M2 M markets and lack of standards. To bridge this gap, the European Telecommunications Standards Institute (ETSI) released a set of specifications for a common M2 M service platform. In this paper, we propose the open source OM2 M project, an autonomic ETSI-compliant M2 M service platform. OM2 M provides a RESTful API to enhance interoperability. It proposes a modular architecture running on top of an OSGi layer, making it highly extensible via plugins. It enables multiple communication protocols binding, reuse of existing remote devices management mechanisms, and interworking with existing legacy devices. Addressing the M2 M complexity issue, a new M2 M service based on the autonomic computing paradigm and semantic models is defined to provide dynamic discovery and reconfiguration mechanisms. © 2014 Published by Elsevier B.V.},
publisher={Elsevier},
issn={18770509},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@ARTICLE{Moreau2014291,
author={Moreau, L. and Huynh, T.D. and Michaelides, D.},
title={An online validator for provenance: Algorithmic design, testing, and API},
journal={Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
year={2014},
volume={8411 LNCS},
pages={291-305},
doi={10.1007/978-3-642-54804-8_20},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900560719&doi=10.1007%2f978-3-642-54804-8_20&partnerID=40&md5=aa12cc841b6e09f9dcd3883277528449},
affiliation={Electronics and Computer Science, University of Southampton, United Kingdom},
abstract={Provenance is a record that describes the people, institutions, entities, and activities involved in producing, influencing, or delivering a piece of data or a thing. The W3C Provenance Working group has just published the prov family of specifications, which include a data model for provenance on the Web. The working group introduces a notion of valid prov document whose intent is to ensure that a prov document represents a consistent history of objects and their interactions that is safe to use for the purpose of reasoning and other kinds of analysis. Valid prov documents satisfy certain definitions, inferences, and constraints, specified in prov-constraints. This paper discusses the design of ProvValidator, an online service for validating provenance documents according to prov-constraints. It discusses the algorithmic design of the validator, the complexity of the algorithm, how we demonstrated compliance with the standard, and its rest api. © 2014 Springer-Verlag.},
publisher={Springer Verlag},
issn={03029743},
isbn={9783642548031},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec}
}

@CONFERENCE{Liu2013269,
author={Liu, D. and Zhu, H. and Bayley, I.},
title={A case study on algebraic specification of cloud computing},
journal={Proceedings of the 2013 21st Euromicro International Conference on Parallel, Distributed, and Network-Based Processing, PDP 2013},
year={2013},
pages={269-273},
doi={10.1109/PDP.2013.46},
art_number={6498563},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877650949&doi=10.1109%2fPDP.2013.46&partnerID=40&md5=2f9d7f35e316ed820ee18b258209efa8},
affiliation={School of Computer Science and Technology, Nanjing University of Science and Technology, Nanjing, 210094, China; Department of Computing and Communication Technologies, Oxford Brookes University, Oxford OX33 1HX, United Kingdom},
abstract={A cloud often provides a RESTful interface with which to access its services. These are usually specified through an open but informal document in the IT industry. There is no agreed standard for the specification of RESTful web services. In this paper, we propose the application of an algebraic method to the formal specification of such services and report a case study with the GoGrid's RESTful API, an industrial real system that provides Infrastructure-as-a-Service. The case study demonstrates that the algebraic approach can provide formal unambiguous specifications that are easy to read and write. It also demonstrates that formalisation can identify and eliminate ambiguity and inconsistency in informal documents. © 2013 IEEE.},
isbn={9780769549392},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@ARTICLE{Paganelli201314,
author={Paganelli, F. and Turchi, S. and Bianchi, L. and Ciofi, L. and Pettenati, M.C. and Pirri, F. and Giuli, D.},
title={An information-centric and REST-based approach for EPC information services},
journal={Journal of Communications Software and Systems},
year={2013},
volume={9},
number={1},
pages={14-23},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876348785&partnerID=40&md5=724bfef68f3a4aabcc63e588b5337efa},
affiliation={National Interuniversity the National Interuniversity Consortium for Telecommunications, Italy; Department of Electronics and Telecommunications, Università Degli Studi di Firenze, 50139, Italy; ICON Foundation, Sesto Fiorentino, Italy},
abstract={Radio Frequency Identification (RFID) techniques are considered relevant building blocks for the Internet of Things. The interoperability across different RFID software and hardware infrastructures is a key requirement for achieving effective and wide-scale Internet of Thing deployments. In this context, the EPC Information Service (EPCIS) is a set of standard specifications for sharing RFID-related data (i.e., EPC events) both within and across enterprises. Although the EPCIS specifies a set of HTTP and Web Service interfaces for querying and adding EPC events, interoperability and easiness of use is hindered by the fact that client applications should be aware of the repositories that are authoritative for one or more given queries and links among related events are not explicitly represented in response messages. In this paper we argue that, by leveraging emerging REST and Linked Data paradigms, EPC events can be handled as a graph of globally-addressable information resources that can be navigated, queried, and aggregated through a uniform interface and seamlessly across organization domains. To validate this approach, we have developed a prototype that exposes the EPCIS interfaces as a set of REST APIs. The prototype implementation exploits the information modeling and management capabilities provided by a framework, called InterDataNet (IDN), that we conceived and developed to ease the realization of the Web of Data and Linked Data applications. © 2013 CCIS.},
issn={18456421},
language={English},
document_type={Article},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Ambra2013120,
author={Ambra, T. and Paganelli, F. and Fantechi, A. and Giuli, D. and Mazzi, L.},
title={Resource-oriented design towards the convergence of Web-centric and Telecom-centric services},
journal={2nd International Conference on Future Generation Communication Technologies, FGCT 2013},
year={2013},
pages={120-125},
doi={10.1109/FGCT.2013.6767203},
art_number={6767203},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898982736&doi=10.1109%2fFGCT.2013.6767203&partnerID=40&md5=46bd3851c0cf8f488900ec8ae8a2fa79},
abstract={Several approaches are currently being discussed for the convergence of Web-centric and Telecom-centric services. They can resort to a resource-oriented design methodology for defining a set of REST APIs in order to allow communication services on the Web. Our work aims at investigating how Telecom capabilities could be exposed on the web and be accessed through web browsers. The contribution of this work is threefold. Firstly, a resource-oriented service design methodology is adopted to specify a set of REST APIs for communication services (e.g. a voice call service). Secondly, we model the call resource behavior through a finite-state machine notation which accounts for the SIP signaling specifications. Thirdly, we design and develop a web application prototype that implements the REST APIs to provide a communication service which is accessible to web browsers and also interworks with SIP User Agents. This prototype supports also a mechanism based on the WebSocket protocol for handling asynchronous notifications. © 2013 IEEE.},
publisher={IEEE Computer Society},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec},
mrs_exclusion_criteria={irrelevant_purpose, not_cs_journal}
}

@CONFERENCE{Teófilo2013,
author={Teófilo, M. and Cavalcanti, L.C. and Siqueira, V. and Ricci, M.},
title={HERE Transit for Series 40: A location based application for public transport on feature phones},
journal={SIGGRAPH Asia 2013 Symposium on Mobile Graphics and Interactive Applications, SA 2013},
year={2013},
doi={10.1145/2543651.2543685},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897370121&doi=10.1145%2f2543651.2543685&partnerID=40&md5=f19ce6fd151aef92b448e356c54fb30e},
affiliation={Nokia Institute of Technology, Brazil},
abstract={Familiar to high-end smartphones users around the world, location based applications are scarce or even unseen on major low-end feature phones. There are many reasons for that, such as, lack of developers interest on those platforms, absence of location-aware hardware, low rate of mobile data plans adoption by its users, difficulties to develop for low-end devices and poor hardware specifications to handle a fast and informative application with complex data. Even though some of those problems could not be addressed by an application developer, HERE Transit aims to tackle the user interface, performance and data usage issues to deliver a full, smartphone-level public transport application to Nokia Series 40 (and potentially other J2ME-based platforms) 1.5 billion devices around the world. The application has three major use cases: Journey planner, nearby stations search and off-line journeys. "Journey planner" takes the user from an origin point (user's current position or informed by the user) to a chosen destination, in any given time in the past or future (provided there is data for that). The application queries the HERE Transit back-end REST API for information on routes and display them to the user (Fig. 1a). From there, the user could take a number of actions such as look for details (Fig. 1b), see section maps (Fig. 1c) or save a route for later (off-line) usage. © 2013 ACM.},
publisher={Association for Computing Machinery},
isbn={9781450326339},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose, not_api_spec}
}

@CONFERENCE{Tserpes2012245,
author={Tserpes, K. and Papadakis, G. and Kardara, M. and Papaoikonomou, A. and Aisopos, F. and Sardis, E. and Varvarigou, T.},
title={An ontology for Social Networking Sites interoperability},
journal={KEOD 2012 - Proceedings of the International Conference on Knowledge Engineering and Ontology Development},
year={2012},
pages={245-250},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-84881397677&partnerID=40&md5=dcaa035e7e8d8927fb34a9e9a59f2773},
affiliation={Department of Electrical and Computer Engineering, National Technical University of Athens, 9, Heroon Polytechniou Str, 15773 Athens, Greece},
abstract={The Social Networking Sites (SNS) comprise a pool from which developers can pump functionality and data. Usable REST APIs are providing access to two valuable business assets: The users' generated content and social graph. The lack of standards and the antagonistic nature of the SNSs have resulted in the use of proprietary API specifications and -in turn- data models. Each SNS uses a different method to access and a different way to describe notions which are largely similar, e.g. "friends" or shared "multimedia items". The conceptual similarity between entities "living" in the SNS, creates a remarkable opportunity: The aggregation of the social functionality and data can provide the basis for a unique platform on top of which third parties can deploy new added value services, seamlessly using the underlying SNSs APIs. This paper presents an attempt to implement this concept by means of building a core ontology for supporting SNS interoperability.},
isbn={9789898565303},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}

@CONFERENCE{Selonen201054,
author={Selonen, P. and Belimpasakis, P. and You, Y.},
title={Developing a ReSTful mixed reality web service platform},
journal={ACM International Conference Proceeding Series},
year={2010},
pages={54-61},
doi={10.1145/1798354.1798387},
url={https://www.scopus.com/inward/record.uri?eid=2-s2.0-77954605778&doi=10.1145%2f1798354.1798387&partnerID=40&md5=21325f56cd5a9f429e152df89386d518},
affiliation={Nokia Research Center, P.O. Box 1000, FI-33721 Tampere, Finland},
abstract={This paper discusses the development of a ReSTful Web Service platform for serving Mixed Reality content at Nokia Research Center. The paper gives an overview of the Mixed Reality domain, the requirements for the platform and its implementation. We further outline a method for developing resource oriented web services, beginning with high-level requirements, formalizing them as UML models and refining them to a ReSTful API specification. The approach is demonstrated with detailed examples of designing one particular API subset for Mixed Reality annotations. © 2010 ACM.},
isbn={9781605589596},
language={English},
document_type={Conference Paper},
source={Scopus},
mrs_inclusion_criteria={full_version, recent, rest_api, api_spec, cs_journal},
mrs_exclusion_criteria={irrelevant_purpose}
}
